Problem: Count how many pairs of given array A sum up to a sum S

Solution in pseudo-code:

1. Count how many times each number appears on the array.
    E.g. :
    A = [1,2,2,2,4,5]
    Occurrences = {
        '1' : 1,
        '2' : 3,
        '4' : 1,
        '5' : 1
    }

2. Initialize accumulator = 0
3. For each unique number on the array (no repetition):
  3.1. Get the complement of the number in relation to the given sum.
  3.2. A candidate solution becomes (number, complement).
  3.3. Make sure <complement> is also in the array
  3.4. Since both <number> and <complement> are in the list, they 
       are a valid solution at least once. 
       If <number> only shows up once, the pair (number, complement)
       is going to be in the solution the same amount of times
       <complement> shows up in the array.

       Conversely,
       If <complement> only shows up once, the pair (number, complement)
       is going to be in the solution the same amount of times
       <number> shows up in the array.

       Therefore the pair (number, complement) shows up in the solution space
       this many times:
         3.4.1. occurrences of (number, complement) in solution = occurrences of <number> * occurrences of <complement>

       As the special case of number == complement:
         [n,n,n,n]
         the first  n makes one pair with each of the other n's = 3 pairs
         the second n makes non-repeated pairs with each of the following n's = 2 pairs
         third n with the fourth n = 1 pair
         3 + 2 + 1 = 6 => we can make 6 n-pairs with [n,n,n,n]

         So the amount of occurrences is:
           3.4.2. occurrences of (number, number) in solution = (occurrences[n]) + (occurrences[n] - 1) + ... + 1
         
       Thus, we add this amount of occurrences in the accumulator (either 3.4.1 or 3.4.2).

    E.g.
    list = [1,2,2,2,4,5]
    1 => complement is 5 => 5 is in the array => (1,5) is a solution
    1 and 5 shows up one time each in the array => 1 * 1 => add 1 to accumulator
    acc => 1
    2 => complement is 4 => 4 is in the array => (2,4) is a solution
    2 shows up three times, 4 shows up once => 
    (2,4)
    (2,4)
    (2,4)
    3 * 1 => 3 solutions => Add to the accumulator
    acc => 4
    4 => complement is 2, but 4 > 2 => pair (4,2), which is the same as (2,4), has already been considered.

4. Answer is on accumulator. Acc = 4 => answer is 4